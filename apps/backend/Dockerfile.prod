FROM node:24-alpine AS builder

WORKDIR /workspace

# Install pnpm (pin to v9 to match repo and avoid v10 deploy changes)
RUN npm install -g pnpm@9

# Copy workspace files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml tsconfig.json ./

# Copy shared package
COPY ./apps/shared ./apps/shared

# Copy backend package
COPY ./apps/backend ./apps/backend

# Install all dependencies (including dev dependencies for build)
RUN pnpm install --frozen-lockfile

# Build shared package
RUN pnpm build:shared

# Set working directory to backend and build
WORKDIR /workspace/apps/backend
RUN node ace build

# Prepare a pruned, production-only node_modules for the backend (no workspace links)
WORKDIR /workspace
# Deploy will create a self-contained node_modules for the filtered package
RUN pnpm --filter ./apps/backend deploy --prod /workspace/deploy

# Production stage
FROM node:24-alpine AS production

WORKDIR /app

# Copy built application and dependencies
COPY --from=builder /workspace/apps/backend/build ./
# Copy backend's package.json for Node "imports" mappings
COPY --from=builder /workspace/apps/backend/package.json ./package.json
# Copy production node_modules created by pnpm deploy (contains packed workspace deps)
COPY --from=builder /workspace/deploy/node_modules ./node_modules

# Expose port
EXPOSE 8080

# Start production server
CMD ["node", "bin/server.js"]
